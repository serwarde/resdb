# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: idl.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='idl.proto',
  package='time',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\tidl.proto\x12\x04time\"\r\n\x0bTimeRequest\"$\n\nAddRequest\x12\n\n\x02n1\x18\x01 \x01(\x05\x12\n\n\x02n2\x18\x02 \x01(\x05\"\x1c\n\tTimeReply\x12\x0f\n\x07message\x18\x01 \x01(\t\"\x17\n\tAddReturn\x12\n\n\x02n1\x18\x01 \x01(\x05\x32\x63\n\x04Time\x12/\n\x07GetTime\x12\x11.time.TimeRequest\x1a\x0f.time.TimeReply\"\x00\x12*\n\x03\x41\x64\x64\x12\x10.time.AddRequest\x1a\x0f.time.AddReturn\"\x00\x62\x06proto3'
)




_TIMEREQUEST = _descriptor.Descriptor(
  name='TimeRequest',
  full_name='time.TimeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=32,
)


_ADDREQUEST = _descriptor.Descriptor(
  name='AddRequest',
  full_name='time.AddRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='n1', full_name='time.AddRequest.n1', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='n2', full_name='time.AddRequest.n2', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=70,
)


_TIMEREPLY = _descriptor.Descriptor(
  name='TimeReply',
  full_name='time.TimeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='time.TimeReply.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=100,
)


_ADDRETURN = _descriptor.Descriptor(
  name='AddReturn',
  full_name='time.AddReturn',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='n1', full_name='time.AddReturn.n1', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=102,
  serialized_end=125,
)

DESCRIPTOR.message_types_by_name['TimeRequest'] = _TIMEREQUEST
DESCRIPTOR.message_types_by_name['AddRequest'] = _ADDREQUEST
DESCRIPTOR.message_types_by_name['TimeReply'] = _TIMEREPLY
DESCRIPTOR.message_types_by_name['AddReturn'] = _ADDRETURN
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TimeRequest = _reflection.GeneratedProtocolMessageType('TimeRequest', (_message.Message,), {
  'DESCRIPTOR' : _TIMEREQUEST,
  '__module__' : 'idl_pb2'
  # @@protoc_insertion_point(class_scope:time.TimeRequest)
  })
_sym_db.RegisterMessage(TimeRequest)

AddRequest = _reflection.GeneratedProtocolMessageType('AddRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDREQUEST,
  '__module__' : 'idl_pb2'
  # @@protoc_insertion_point(class_scope:time.AddRequest)
  })
_sym_db.RegisterMessage(AddRequest)

TimeReply = _reflection.GeneratedProtocolMessageType('TimeReply', (_message.Message,), {
  'DESCRIPTOR' : _TIMEREPLY,
  '__module__' : 'idl_pb2'
  # @@protoc_insertion_point(class_scope:time.TimeReply)
  })
_sym_db.RegisterMessage(TimeReply)

AddReturn = _reflection.GeneratedProtocolMessageType('AddReturn', (_message.Message,), {
  'DESCRIPTOR' : _ADDRETURN,
  '__module__' : 'idl_pb2'
  # @@protoc_insertion_point(class_scope:time.AddReturn)
  })
_sym_db.RegisterMessage(AddReturn)



_TIME = _descriptor.ServiceDescriptor(
  name='Time',
  full_name='time.Time',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=127,
  serialized_end=226,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetTime',
    full_name='time.Time.GetTime',
    index=0,
    containing_service=None,
    input_type=_TIMEREQUEST,
    output_type=_TIMEREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='Add',
    full_name='time.Time.Add',
    index=1,
    containing_service=None,
    input_type=_ADDREQUEST,
    output_type=_ADDRETURN,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TIME)

DESCRIPTOR.services_by_name['Time'] = _TIME

# @@protoc_insertion_point(module_scope)
